services:
  django_app:
    build:
      context: django_oauth
      target: builder
    container_name: django_app
    command: > 
      sh -c "python manage.py migrate
      && python manage.py collectstatic --no-input
      && gunicorn django_oauth.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
    env_file:
      - .env
    depends_on:
      pg_db:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "pgrep", "gunicorn"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_db:
    image: postgres:latest
    container_name: pg_db
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  proxy_react_app:
    build: frontend
    container_name: proxy_react_app
    ports:
      - "80:80"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - build_volume:/usr/share/nginx/html
    depends_on:
      django_app:
        condition: service_healthy

volumes:
  db_data:
  static_volume:
  build_volume: